import { IterableReadableStream } from "./stream.js";
export async function* createOllamaStream(baseUrl, params, options) {
    const response = await fetch(`${baseUrl}/api/generate`, {
        method: "POST",
        body: JSON.stringify(params),
        headers: {
            "Content-Type": "application/json",
        },
        signal: options.signal,
    });
    if (!response.ok) {
        const error = new Error(`Ollama call failed with status code ${response.status}`);
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        error.response = response;
        console.log(await response.json());
        throw error;
    }
    if (!response.body) {
        throw new Error("Could not begin Ollama stream. Please check the given URL and try again.");
    }
    const stream = IterableReadableStream.fromReadableStream(response.body);
    const decoder = new TextDecoder();
    for await (const chunk of stream) {
        try {
            yield JSON.parse(decoder.decode(chunk));
        }
        catch (e) {
            console.warn(`Received a non-JSON parseable chunk: ${decoder.decode(chunk)}`);
        }
    }
}
